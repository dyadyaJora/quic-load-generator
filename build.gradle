plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'dev.jora'
version '1.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'info.picocli:picocli:4.6.2'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.2'
    implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:6.3.0'
    implementation files('flupke/build/libs/flupke.jar')
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor  group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.4'


    testImplementation group: 'junit', name: 'junit', version: '4.12'

    // Use rest assured
    testImplementation 'io.rest-assured:rest-assured:4.3.3'
    testImplementation 'io.rest-assured:json-schema-validator:4.3.3'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.testCompileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': 'dev.jora.quicloadgenerator.Main'
        )
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'QUIC Load Generator'
                description = 'CLI tool to generate load profile of QUIC requests'
                url = 'https://github.com/dyadyaJora/quic-load-generator'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'dyadyaJora'
                        name = 'George K'
                        email = 'idyadyajora@yandex.ru'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/dyadyaJora/quic-load-generator.git'
                    developerConnection = 'scm:git:ssh://github.com:dyadyaJora/quic-load-generator.git'
                    url = 'https://github.com/dyadyaJora/quic-load-generator'
                }
            }
        }
    }
    repositories {
        maven {
            name = "LocalMavenWithChecksums"
            url = mavenLocal().url
        }
    }
}

//tasks.withType(Jar) { task ->
//    task.doLast {
//        ant.checksum algorithm: 'md5', file: it.archivePath
//        ant.checksum algorithm: 'sha1', file: it.archivePath
//    }
//}

signing {
    sign publishing.publications.mavenJava
}

wrapper {
    gradleVersion = "8.10.2"
}